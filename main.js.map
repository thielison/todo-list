{"version":3,"file":"main.js","mappings":"mBAGA,MAAMA,EAAsC,KACxC,MAAMC,EAAmBC,SAASC,eAAe,sBAC3CC,EAA0BF,SAASC,eAAe,2BAExD,GAA8C,SAA1CC,EAAwBC,MAAMC,SAAyD,SAAnCL,EAAiBI,MAAMC,QAG3E,OAFAF,EAAwBC,MAAMC,QAAU,YACxCL,EAAiBI,MAAMC,QAAU,QAIrCF,EAAwBC,MAAMC,QAAU,OACxCL,EAAiBI,MAAMC,QAAU,MAAM,EAgDrCC,EAAyCC,IAC3CA,EAAGC,iBAAiB,SAAUC,IAEC,eAAvBA,EAAEC,OAAOC,WA9CjBV,SAASW,cAAc,oBAAoBR,MAAMC,QAAU,QAqDvDQ,QAAQC,IAAIL,EAAEC,SArCmB,CAACD,IAbb,CAACM,IAE1BA,EAAQC,cAAcC,SAItB,IAAIC,EAAcjB,SAASkB,iBAAiB,YAC5C,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAYG,OAAQD,IACpCF,EAAYE,GAAGE,aAAa,aAAcF,EAC9C,EAMAG,CAAqBd,EAAEC,QAEvBc,EAASC,cAAchB,EAAEC,OAAOM,cAAcU,QAAQC,MAAM,EA2BpDC,CAAiCnB,EAMhB,GACvB,EC1BOe,EA3CW,MACpB,MAAMA,EAAW,GAuCjB,MAAO,CAAEK,cAjCa,KAClB,MAAMC,EAAmB7B,SAASC,eAAe,sBAEjD,IAAI6B,EAAKP,EAASH,OAEdW,EAAcF,EAAiBG,MAEf,KAAhBD,IAIJR,EAASU,KAAK,CAAEH,KAAIC,cAAaG,MAPrB,KD8DW,EAACH,EAAaL,KAEzC,MAAMS,EAAKnC,SAASW,cAAc,aAG5BL,EA9B4B,EAACyB,EAAaL,KAChD,IAAIpB,EAAKN,SAASoC,cAAc,MAKhC,OAJA9B,EAAG+B,YAAcN,EACjBzB,EAAGe,aAAa,aAAcK,GAC9BpB,EAAGgC,UAAUC,IAAI,WAEVjC,CAAE,EAwBEkC,CAA8BT,EAAaL,GAGtDrB,EAAsCC,GAGtC,MAAMmC,EA7CwB,MAC9B,MAAMA,EAAYzC,SAASoC,cAAc,QAEzC,OADAK,EAAU/B,UAAY,aACf+B,CAAS,EA0CEC,GAElBpC,EAAGqC,YAAYF,GACfN,EAAGS,OAAOtC,GAGVR,GAAqC,ECvEjC+C,CAAuBd,EAAaD,GAEpCD,EAAiBG,MAAQ,GAEzBpB,QAAQC,IAAIU,GAAS,EAiBDC,cAdDE,IACfA,GAAS,GACTH,EAASuB,OAAOpB,EAAO,GAK3B,IAAK,IAAIP,EAAI,EAAGA,EAAII,EAASH,OAAQD,IACjCI,EAASJ,GAAGW,GAAKX,EAGrBP,QAAQC,IAAIU,EAAS,EAGc,EAGnBwB,GC5BxB/C,SAASC,eAAe,sBAAsBM,iBAAiB,SAAS,IAAMT,MAG9EE,SAASC,eAAe,2BAA2BM,iBAAiB,SAlBlByC,IAC9CA,EAAUC,iBAE2B,QAAjCD,EAAUvC,OAAO4B,YACjBd,EAASK,gBAC+B,WAAjCoB,EAAUvC,OAAO4B,aACxBvC,GACJ,IAaJE,SAASW,cAAc,qCAAqCJ,iBAAiB,SAV1C,KAC/BK,QAAQC,IAAI,8BAA8B,G","sources":["webpack://todo-list/./src/modules/dom-manager.js","webpack://todo-list/./src/modules/project-manager.js","webpack://todo-list/./src/index.js"],"sourcesContent":["import { projects } from \"./project-manager.js\";\r\n\r\n// Shows or hides both the form to input Project Name and the \"Add Project\" button\r\nconst toggleHideOrShowInputForProjectName = () => {\r\n    const addProjectButton = document.getElementById(\"add-project-button\");\r\n    const inputFormForProjectName = document.getElementById(\"project-name-input-form\");\r\n\r\n    if (inputFormForProjectName.style.display === \"flex\" && addProjectButton.style.display === \"none\") {\r\n        inputFormForProjectName.style.display = \"none\";\r\n        addProjectButton.style.display = \"flex\";\r\n        return;\r\n    }\r\n\r\n    inputFormForProjectName.style.display = \"flex\";\r\n    addProjectButton.style.display = \"none\";\r\n};\r\n\r\nconst handleProjectNameClick = () => {\r\n    // Show \"add task button\"\r\n    document.querySelector(\".add-task-button\").style.display = \"block\";\r\n};\r\n\r\nconst removeProjectFromDOM = (project) => {\r\n    // Removes a project from the DOM\r\n    project.parentElement.remove();\r\n\r\n    // Updates the data-index attribute of all remaining projects in the DOM\r\n    // to reflect their new position in the projectsManager.projects array\r\n    let allProjects = document.querySelectorAll(\".project\");\r\n    for (let i = 0; i < allProjects.length; i++) {\r\n        allProjects[i].setAttribute(\"data-index\", i);\r\n    }\r\n};\r\n\r\n// Function to handle delete project button click\r\nconst handleClickOnDeleteProjectButton = (e) => {\r\n    // Remove the project from the DOM\r\n    removeProjectFromDOM(e.target);\r\n    // And remove the project from the projects array\r\n    projects.removeProject(e.target.parentElement.dataset.index);\r\n};\r\n\r\n// Delete project on each project name on the DOM\r\nconst createDeleteProjectButton = () => {\r\n    const deleteBtn = document.createElement(\"span\");\r\n    deleteBtn.className = \"delete-btn\";\r\n    return deleteBtn;\r\n};\r\n\r\n// Create a new list item that hold the name of the project\r\n// The data-index attribute set here on each project in the DOM\r\n// corresponds exactly to the index of the array that holds the Projects\r\nconst createListItemWithProjectName = (projectName, index) => {\r\n    let li = document.createElement(\"li\");\r\n    li.textContent = projectName;\r\n    li.setAttribute(\"data-index\", index);\r\n    li.classList.add(\"project\");\r\n\r\n    return li;\r\n};\r\n\r\n// Function do add an event listener to each list item (project name)\r\nconst addEventListenerToProjectNameListItem = (li) => {\r\n    li.addEventListener(\"click\", (e) => {\r\n        // Check if the clicked element is the delete button\r\n        if (e.target.className === \"delete-btn\") {\r\n            handleClickOnDeleteProjectButton(e);\r\n            return;\r\n        } else {\r\n            handleProjectNameClick();\r\n        }\r\n\r\n        console.log(e.target);\r\n    });\r\n};\r\n\r\n// Function to append a new project name to the DOM\r\nconst appendProjectNameToDOM = (projectName, index) => {\r\n    // Select the projects unordered list from the DOM\r\n    const ul = document.querySelector(\".projects\");\r\n\r\n    // Create a new list item with project name and data-index\r\n    const li = createListItemWithProjectName(projectName, index);\r\n\r\n    // Add an event listener to each project (list item)\r\n    addEventListenerToProjectNameListItem(li);\r\n\r\n    // Create a delete button for the project\r\n    const deleteBtn = createDeleteProjectButton();\r\n\r\n    li.appendChild(deleteBtn);\r\n    ul.append(li);\r\n\r\n    // Toggle the visibility of the input for the project name\r\n    toggleHideOrShowInputForProjectName();\r\n};\r\n\r\nexport { toggleHideOrShowInputForProjectName, appendProjectNameToDOM };\r\n","import { appendProjectNameToDOM } from \"./dom-manager\";\r\n\r\n// This function manages an array of projects (an array of to-do items)\r\n// Each element in the array is an object with an id, projectName, and todos\r\nconst projectsManager = () => {\r\n    const projects = [];\r\n\r\n    const getProjects = () => {\r\n        return projects;\r\n    };\r\n\r\n    const addNewProject = () => {\r\n        const projectNameInput = document.getElementById(\"project-name-input\");\r\n\r\n        let id = projects.length;\r\n        let todos = [];\r\n        let projectName = projectNameInput.value;\r\n\r\n        if (projectName === \"\") {\r\n            return;\r\n        }\r\n\r\n        projects.push({ id, projectName, todos });\r\n        appendProjectNameToDOM(projectName, id);\r\n\r\n        projectNameInput.value = \"\";\r\n\r\n        console.log(projects);\r\n    };\r\n\r\n    const removeProject = (index) => {\r\n        if (index > -1) {\r\n            projects.splice(index, 1);\r\n        }\r\n\r\n        // Updates the id of all the remaining projects in the array\r\n        // to reflect their new position in the projectsManager.projects array\r\n        for (let i = 0; i < projects.length; i++) {\r\n            projects[i].id = i;\r\n        }\r\n\r\n        console.log(projects);\r\n    };\r\n\r\n    return { addNewProject, removeProject };\r\n};\r\n\r\nexport const projects = projectsManager();\r\n","import { projects } from \"./modules/project-manager.js\";\r\nimport { toggleHideOrShowInputForProjectName } from \"./modules/dom-manager.js\";\r\n\r\n// Handle click on the \"Add Project Button\" in the Projects Menu\r\nconst handleClickOnAddAndCancelProjectNameBtns = (submitBtn) => {\r\n    submitBtn.preventDefault();\r\n\r\n    if (submitBtn.target.textContent === \"Add\") {\r\n        projects.addNewProject();\r\n    } else if (submitBtn.target.textContent === \"Cancel\") {\r\n        toggleHideOrShowInputForProjectName();\r\n    }\r\n};\r\n\r\nconst handleClickOnAddTaskButton = () => {\r\n    console.log(\"Task add button was clicked\");\r\n};\r\n\r\n// Button to create a new project (\"Add Project\" button)\r\ndocument.getElementById(\"add-project-button\").addEventListener(\"click\", () => toggleHideOrShowInputForProjectName());\r\n\r\n// Form to type project name... it opens when the user clicks on the \"Add Project\" button\r\ndocument.getElementById(\"project-name-input-form\").addEventListener(\"click\", handleClickOnAddAndCancelProjectNameBtns);\r\n\r\ndocument.querySelector(\".tasks-container .add-task-button\").addEventListener(\"click\", handleClickOnAddTaskButton);\r\n"],"names":["toggleHideOrShowInputForProjectName","addProjectButton","document","getElementById","inputFormForProjectName","style","display","addEventListenerToProjectNameListItem","li","addEventListener","e","target","className","querySelector","console","log","project","parentElement","remove","allProjects","querySelectorAll","i","length","setAttribute","removeProjectFromDOM","projects","removeProject","dataset","index","handleClickOnDeleteProjectButton","addNewProject","projectNameInput","id","projectName","value","push","todos","ul","createElement","textContent","classList","add","createListItemWithProjectName","deleteBtn","createDeleteProjectButton","appendChild","append","appendProjectNameToDOM","splice","projectsManager","submitBtn","preventDefault"],"sourceRoot":""}