{"version":3,"file":"main.js","mappings":"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","sources":["webpack://todo-list/./node_modules/date-fns/toDate.mjs","webpack://todo-list/./node_modules/date-fns/isValid.mjs","webpack://todo-list/./node_modules/date-fns/isDate.mjs","webpack://todo-list/./node_modules/date-fns/locale/en-US/_lib/formatDistance.mjs","webpack://todo-list/./node_modules/date-fns/locale/_lib/buildFormatLongFn.mjs","webpack://todo-list/./node_modules/date-fns/locale/en-US/_lib/formatLong.mjs","webpack://todo-list/./node_modules/date-fns/locale/en-US/_lib/formatRelative.mjs","webpack://todo-list/./node_modules/date-fns/locale/_lib/buildLocalizeFn.mjs","webpack://todo-list/./node_modules/date-fns/locale/_lib/buildMatchFn.mjs","webpack://todo-list/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.mjs","webpack://todo-list/./node_modules/date-fns/locale/en-US.mjs","webpack://todo-list/./node_modules/date-fns/locale/en-US/_lib/localize.mjs","webpack://todo-list/./node_modules/date-fns/locale/en-US/_lib/match.mjs","webpack://todo-list/./node_modules/date-fns/_lib/defaultOptions.mjs","webpack://todo-list/./node_modules/date-fns/constants.mjs","webpack://todo-list/./node_modules/date-fns/startOfDay.mjs","webpack://todo-list/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.mjs","webpack://todo-list/./node_modules/date-fns/constructFrom.mjs","webpack://todo-list/./node_modules/date-fns/getDayOfYear.mjs","webpack://todo-list/./node_modules/date-fns/differenceInCalendarDays.mjs","webpack://todo-list/./node_modules/date-fns/startOfYear.mjs","webpack://todo-list/./node_modules/date-fns/startOfWeek.mjs","webpack://todo-list/./node_modules/date-fns/startOfISOWeek.mjs","webpack://todo-list/./node_modules/date-fns/getISOWeekYear.mjs","webpack://todo-list/./node_modules/date-fns/getISOWeek.mjs","webpack://todo-list/./node_modules/date-fns/startOfISOWeekYear.mjs","webpack://todo-list/./node_modules/date-fns/getWeekYear.mjs","webpack://todo-list/./node_modules/date-fns/getWeek.mjs","webpack://todo-list/./node_modules/date-fns/startOfWeekYear.mjs","webpack://todo-list/./node_modules/date-fns/_lib/addLeadingZeros.mjs","webpack://todo-list/./node_modules/date-fns/_lib/format/lightFormatters.mjs","webpack://todo-list/./node_modules/date-fns/_lib/format/formatters.mjs","webpack://todo-list/./node_modules/date-fns/_lib/format/longFormatters.mjs","webpack://todo-list/./node_modules/date-fns/_lib/protectedTokens.mjs","webpack://todo-list/./node_modules/date-fns/format.mjs","webpack://todo-list/./src/modules/dom-manager.js","webpack://todo-list/./src/modules/local-storage.js","webpack://todo-list/./src/modules/project-manager.js","webpack://todo-list/./node_modules/date-fns/isWithinInterval.mjs","webpack://todo-list/./src/modules/home-menu-handlers.js","webpack://todo-list/./node_modules/date-fns/isEqual.mjs","webpack://todo-list/./node_modules/date-fns/endOfWeek.mjs","webpack://todo-list/./src/index.js"],"sourcesContent":["/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { isDate } from \"./isDate.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  if (!isDate(date) && typeof date !== \"number\") {\n    return false;\n  }\n  const _date = toDate(date);\n  return !isNaN(Number(_date));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/* eslint-disable no-unused-vars */\n\n/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./en-US/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.mjs\";\nimport { localize } from \"./en-US/_lib/localize.mjs\";\nimport { match } from \"./en-US/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const utcDate = new Date(\n    Date.UTC(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n      date.getHours(),\n      date.getMinutes(),\n      date.getSeconds(),\n      date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}\n","/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from 'date-fns'\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use contrustor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   )\n * }\n */\nexport function constructFrom(date, value) {\n  if (date instanceof Date) {\n    return new date.constructor(value);\n  } else {\n    return new Date(value);\n  }\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { startOfYear } from \"./startOfYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date) {\n  const _date = toDate(date);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { millisecondsInDay } from \"./constants.mjs\";\nimport { startOfDay } from \"./startOfDay.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(dateLeft, dateRight) {\n  const startOfDayLeft = startOfDay(dateLeft);\n  const startOfDayRight = startOfDay(dateRight);\n\n  const timestampLeft =\n    startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  const timestampRight =\n    startOfDayRight.getTime() -\n    getTimezoneOffsetInMilliseconds(startOfDayRight);\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n  return Math.round((timestampLeft - timestampRight) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date) {\n  const cleanDate = toDate(date);\n  const _date = constructFrom(date, 0);\n  _date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.mjs\";\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date) {\n  return startOfWeek(date, { weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date) {\n  const _date = toDate(date);\n  const diff =\n    startOfISOWeek(_date).getTime() - startOfISOWeekYear(_date).getTime();\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { getISOWeekYear } from \"./getISOWeekYear.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date) {\n  const year = getISOWeekYear(date);\n  const fourthOfJanuary = constructFrom(date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { startOfWeekYear } from \"./startOfWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport function getWeek(date, options) {\n  const _date = toDate(date);\n  const diff =\n    startOfWeek(_date, options).getTime() -\n    startOfWeekYear(_date, options).getTime();\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { getWeekYear } from \"./getWeekYear.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.floor(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.mjs\";\nimport { getISOWeek } from \"../../getISOWeek.mjs\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.mjs\";\nimport { getWeek } from \"../../getWeek.mjs\";\nimport { getWeekYear } from \"../../getWeekYear.mjs\";\nimport { addLeadingZeros } from \"../addLeadingZeros.mjs\";\nimport { lightFormatters } from \"./lightFormatters.mjs\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    const originalDate = options._originalDate || date;\n    const timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    const originalDate = options._originalDate || date;\n    const timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    const originalDate = options._originalDate || date;\n    const timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    const originalDate = options._originalDate || date;\n    const timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    const originalDate = options._originalDate || date;\n    const timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    const originalDate = options._originalDate || date;\n    const timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.floor(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const protectedDayOfYearTokens = [\"D\", \"DD\"];\nconst protectedWeekYearTokens = [\"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\n\nexport function throwProtectedError(token, format, input) {\n  if (token === \"YYYY\") {\n    throw new RangeError(\n      `Use \\`yyyy\\` instead of \\`YYYY\\` (in \\`${format}\\`) for formatting years to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`,\n    );\n  } else if (token === \"YY\") {\n    throw new RangeError(\n      `Use \\`yy\\` instead of \\`YY\\` (in \\`${format}\\`) for formatting years to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`,\n    );\n  } else if (token === \"D\") {\n    throw new RangeError(\n      `Use \\`d\\` instead of \\`D\\` (in \\`${format}\\`) for formatting days of the month to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`,\n    );\n  } else if (token === \"DD\") {\n    throw new RangeError(\n      `Use \\`dd\\` instead of \\`DD\\` (in \\`${format}\\`) for formatting days of the month to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`,\n    );\n  }\n}\n","import { isValid } from \"./isValid.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\nimport { formatters } from \"./_lib/format/formatters.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  throwProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate,\n  };\n\n  const result = formatStr\n    .match(longFormattingTokensRegExp)\n    .map(function (substring) {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map(function (substring) {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return \"'\";\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return cleanEscapedString(substring);\n      }\n\n      const formatter = formatters[firstCharacter];\n      if (formatter) {\n        if (\n          !options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(substring)\n        ) {\n          throwProtectedError(substring, formatStr, String(date));\n        }\n        if (\n          !options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(substring)\n        ) {\n          throwProtectedError(substring, formatStr, String(date));\n        }\n        return formatter(\n          originalDate,\n          substring,\n          locale.localize,\n          formatterOptions,\n        );\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return substring;\n    })\n    .join(\"\");\n\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","\"use strict\";\r\n\r\nimport { projects as projectsAndTodosManager } from \"./project-manager.js\";\r\nimport { format } from \"date-fns\";\r\n\r\n// Export the updated data index of last project clicked\r\n// This data index will be used to add todos to a specific project\r\nexport let dataIndexOfLastProjectClicked = null;\r\n\r\n// FUNCTIONS RESPONSIBLE FOR MANAGING PROJECTS\r\n// Shows or hides both the form to input Project Name and the \"Add Project\" button\r\nconst toggleHideOrShowInputForProjectName = () => {\r\n    const addProjectButton = document.getElementById(\"add-project-button\");\r\n    const inputFormForProjectName = document.getElementById(\"project-name-input-form\");\r\n\r\n    if (inputFormForProjectName.style.display === \"flex\" && addProjectButton.style.display === \"none\") {\r\n        inputFormForProjectName.style.display = \"none\";\r\n        addProjectButton.style.display = \"flex\";\r\n        return;\r\n    }\r\n\r\n    inputFormForProjectName.style.display = \"flex\";\r\n    addProjectButton.style.display = \"none\";\r\n};\r\n\r\nconst toggleHideOrShowInputForToDoInfo = () => {\r\n    const toDoInformationForm = document.querySelector(\".todo-input-information-container\");\r\n\r\n    if (toDoInformationForm.style.display === \"none\") {\r\n        toDoInformationForm.style.display = \"block\";\r\n        return;\r\n    }\r\n\r\n    toDoInformationForm.style.display = \"none\";\r\n};\r\n\r\nconst toggleHideOrShowInputToEditToDoInfo = () => {\r\n    const toDoInformationForm = document.querySelector(\".todo-edit-information-container\");\r\n\r\n    if (toDoInformationForm.style.display === \"none\") {\r\n        toDoInformationForm.style.display = \"block\";\r\n        return;\r\n    }\r\n\r\n    toDoInformationForm.style.display = \"none\";\r\n};\r\n\r\n// Display the \"add task\" button on the page\r\nconst toggleAddTaskButton = (show) => {\r\n    const addTaskButton = document.querySelector(\".add-task-button\");\r\n    addTaskButton.style.display = show ? \"block\" : \"none\";\r\n};\r\n\r\n// Define a function to handle project name clicks\r\nconst projectNameClickEventHandler = () => {\r\n    // Update the tasks header with the project name\r\n    const updateProjectsHeaderOnPage = (index) => {\r\n        const projectsArray = projectsAndTodosManager.getProjects();\r\n        const tasksHeader = document.querySelector(\".tasks-container .tasks-header\");\r\n        tasksHeader.textContent = projectsArray[index].projectName;\r\n    };\r\n\r\n    // Handle a project name click event\r\n    const projectNameClicked = (event) => {\r\n        dataIndexOfLastProjectClicked = event.target.dataset.index;\r\n        updateProjectsHeaderOnPage(dataIndexOfLastProjectClicked);\r\n        displayTodos(\"singleProjectTodos\", dataIndexOfLastProjectClicked);\r\n        toggleAddTaskButton(true);\r\n    };\r\n\r\n    return {\r\n        projectNameClicked,\r\n    };\r\n};\r\n\r\n// Depending on the boolean passed as an argument, this function will add or\r\n// remove the css class \"disabled\" from each project name and the Add Project btn,\r\n// preventing changing and adding projects when editing a specific todo\r\nconst preventAddOrChangeProject = (status) => {\r\n    const projects = document.querySelectorAll(\".projects li\");\r\n    const addProjectBtn = document.getElementById(\"add-project-button\");\r\n\r\n    projects.forEach((project) => {\r\n        status ? project.classList.add(\"disabled\") : project.classList.remove(\"disabled\");\r\n    });\r\n\r\n    status ? addProjectBtn.classList.add(\"disabled\") : addProjectBtn.classList.remove(\"disabled\");\r\n};\r\n\r\nconst removeProjectFromDOM = (project) => {\r\n    // Removes a project from the DOM\r\n    project.parentElement.remove();\r\n\r\n    // Updates the data-index attribute of all remaining projects in the DOM\r\n    // to reflect their new position in the projectsManager.projects array\r\n    let allProjects = document.querySelectorAll(\".project\");\r\n    for (let i = 0; i < allProjects.length; i++) {\r\n        allProjects[i].setAttribute(\"data-index\", i);\r\n    }\r\n};\r\n\r\n// Function to handle delete project button click\r\nconst handleClickOnDeleteProjectButton = (e) => {\r\n    // Remove the project from the DOM\r\n    removeProjectFromDOM(e.target);\r\n    // And remove the project from the projects array\r\n    projectsAndTodosManager.removeProject(e.target.parentElement.dataset.index);\r\n\r\n    // Project deleted, so taskCount = 0\r\n    updateTaskCount(0);\r\n\r\n    // Clear all todos displayed in the page after deleting the project\r\n    clearTaskList();\r\n\r\n    // Returns to initial page displaying all tasks\r\n    displayTodos(\"allProjectsTodos\");\r\n\r\n    // Hides add task button to prevent adding todos to inexistent project\r\n    toggleAddTaskButton();\r\n};\r\n\r\n// Delete project on each project name on the DOM\r\nconst createDeleteProjectButton = () => {\r\n    const deleteBtn = document.createElement(\"span\");\r\n    deleteBtn.className = \"delete-btn\";\r\n    return deleteBtn;\r\n};\r\n\r\n// Create a new list item that hold the name of the project\r\n// The data-index attribute set here on each project in the DOM\r\n// corresponds exactly to the index of the array that holds the Projects\r\nconst createListItemWithProjectName = (projectName, index) => {\r\n    let li = document.createElement(\"li\");\r\n    li.textContent = projectName;\r\n    li.setAttribute(\"data-index\", index);\r\n    li.classList.add(\"project\");\r\n\r\n    return li;\r\n};\r\n\r\n// Function do add an event listener to each list item (project name)\r\nconst addEventListenerToProjectNameListItem = (li) => {\r\n    li.addEventListener(\"click\", (e) => {\r\n        // Check if the clicked element is the delete button\r\n        if (e.target.className === \"delete-btn\") {\r\n            handleClickOnDeleteProjectButton(e);\r\n            return;\r\n        } else {\r\n            const projectsEventHandler = projectNameClickEventHandler();\r\n            projectsEventHandler.projectNameClicked(e);\r\n        }\r\n    });\r\n};\r\n\r\n// Function to append a new project name to the DOM\r\nconst appendProjectNameToDOM = (projectName, index) => {\r\n    // Select the projects unordered list from the DOM\r\n    const ul = document.querySelector(\".projects\");\r\n\r\n    // Create a new list item with project name and data-index\r\n    const li = createListItemWithProjectName(projectName, index);\r\n\r\n    // Add an event listener to each project (list item)\r\n    addEventListenerToProjectNameListItem(li);\r\n\r\n    // Create a delete button for the project\r\n    const deleteBtn = createDeleteProjectButton();\r\n\r\n    li.appendChild(deleteBtn);\r\n    ul.append(li);\r\n\r\n    // Toggle the visibility of the input for the project name\r\n    toggleHideOrShowInputForProjectName();\r\n};\r\n\r\n// This function will keep track of the number of todos inside a project\r\nconst updateTaskCount = (numOfTodos) => {\r\n    const taskCountSpan = document.getElementById(\"task-count\");\r\n    taskCountSpan.textContent = numOfTodos;\r\n};\r\n\r\n// FUNCTIONS RESPONSIBLE FOR MANAGING TO DOS\r\n\r\n// This function changes the todo status as completed or not\r\nconst onTodoCheckboxChange = (e) => {\r\n    const isCompleted = e.target.checked;\r\n    const projectIndex = e.target.closest(\".todo\").dataset.projectIndex;\r\n    const todoIndex = e.target.closest(\".todo\").dataset.todoIndex;\r\n\r\n    projectsAndTodosManager.toggleTodoCompletion(projectIndex, todoIndex, isCompleted);\r\n};\r\n\r\nconst clearTaskList = () => {\r\n    const taskList = document.querySelector(\".task-list\");\r\n    taskList.textContent = \"\";\r\n\r\n    return taskList;\r\n};\r\n\r\n// Functions responsible for creating DOM elements\r\nconst createTodoLeftSide = (projectIndex, todoIndex) => {\r\n    const projectsAndTodosArray = projectsAndTodosManager.getProjects();\r\n\r\n    const todoLeftSide = document.createElement(\"div\");\r\n    todoLeftSide.className = \"todo-left-side\";\r\n\r\n    // Create a div that will contain the todo checkbox\r\n    const checkboxDiv = document.createElement(\"div\");\r\n\r\n    const checkbox = document.createElement(\"input\");\r\n    checkbox.setAttribute(\"type\", \"checkbox\");\r\n    checkbox.setAttribute(\"id\", `project[${projectIndex}]-todo[${todoIndex}]`);\r\n    checkbox.setAttribute(\"name\", `todo-checkbox`);\r\n\r\n    // Each todo checkbox will have its own event listener\r\n    // This allows to toggle each todo as completed or not\r\n    checkbox.addEventListener(\"change\", onTodoCheckboxChange);\r\n\r\n    const todoIsChecked = projectsAndTodosArray[projectIndex].todos[todoIndex].isCompleted;\r\n    if (todoIsChecked) {\r\n        checkbox.checked = true;\r\n    }\r\n\r\n    checkboxDiv.append(checkbox);\r\n\r\n    // Create a div that will contain the todo title and description\r\n    const todoTitleAndDescriptionDiv = document.createElement(\"div\");\r\n    todoTitleAndDescriptionDiv.classList = \"todo-title-and-description-div\";\r\n\r\n    const todoTitleLabel = document.createElement(\"label\");\r\n    todoTitleLabel.setAttribute(\"for\", `project[${projectIndex}]-todo[${todoIndex}]`);\r\n    todoTitleLabel.textContent = projectsAndTodosArray[projectIndex].todos[todoIndex].title;\r\n\r\n    const todoDescriptionPara = document.createElement(\"p\");\r\n    todoDescriptionPara.className = \"todo-description\";\r\n    todoDescriptionPara.textContent = projectsAndTodosArray[projectIndex].todos[todoIndex].description;\r\n    // Append title and description to the todoTitleAndDescriptionDiv\r\n    todoTitleAndDescriptionDiv.append(todoTitleLabel, todoDescriptionPara);\r\n    // Append the checkbox div, and the title and description div\r\n    todoLeftSide.append(checkboxDiv, todoTitleAndDescriptionDiv);\r\n\r\n    return todoLeftSide;\r\n};\r\n\r\nconst createTodoRightSide = (projectIndex, todoIndex) => {\r\n    const projectsAndTodosArray = projectsAndTodosManager.getProjects();\r\n\r\n    const todoRightSide = document.createElement(\"div\");\r\n    todoRightSide.className = \"todo-right-side\";\r\n\r\n    const dateString = projectsAndTodosArray[projectIndex].todos[todoIndex].dueDate;\r\n    const date = new Date(dateString.replace(/-/g, \"/\"));\r\n\r\n    const dueDate = document.createElement(\"p\");\r\n    dueDate.textContent = format(date, \"dd-MM-yyyy\");\r\n\r\n    const editTodoBtn = document.createElement(\"button\");\r\n    editTodoBtn.className = \"edit-to-do\";\r\n    editTodoBtn.textContent = \"Edit\";\r\n\r\n    const deleteTodoBtn = document.createElement(\"button\");\r\n    deleteTodoBtn.className = \"delete-to-do\";\r\n    deleteTodoBtn.textContent = \"Delete\";\r\n\r\n    todoRightSide.append(dueDate, editTodoBtn, deleteTodoBtn);\r\n\r\n    return todoRightSide;\r\n};\r\n\r\nconst createTodoElements = (projectIndex, todoIndex) => {\r\n    const li = document.createElement(\"li\");\r\n    li.setAttribute(\"data-project-index\", projectIndex);\r\n    li.setAttribute(\"data-todo-index\", todoIndex);\r\n    li.className = \"todo\";\r\n\r\n    const todoLeftSide = createTodoLeftSide(projectIndex, todoIndex);\r\n    const todoRightSide = createTodoRightSide(projectIndex, todoIndex);\r\n\r\n    li.append(todoLeftSide, todoRightSide);\r\n\r\n    return li;\r\n};\r\n\r\nconst displayTodos = (display, projectIndex, todoIndex) => {\r\n    const projectsAndTodosArray = projectsAndTodosManager.getProjects();\r\n\r\n    const displaySingleProjectTodos = () => {\r\n        const taskList = clearTaskList();\r\n        const ul = document.createElement(\"ul\");\r\n\r\n        for (let i = 0; i < projectsAndTodosArray[projectIndex].todos.length; i++) {\r\n            const li = createTodoElements(projectIndex, i);\r\n            ul.append(li);\r\n        }\r\n\r\n        taskList.append(ul);\r\n\r\n        const numOfTodos = document.querySelectorAll(\".task-list ul li\").length;\r\n        updateTaskCount(numOfTodos);\r\n    };\r\n\r\n    const displayAllProjectsTodos = () => {\r\n        const taskList = clearTaskList();\r\n        const ul = document.createElement(\"ul\");\r\n\r\n        for (let i = 0; i < projectsAndTodosArray.length; i++) {\r\n            for (let j = 0; j < projectsAndTodosArray[i].todos.length; j++) {\r\n                const li = createTodoElements(i, j);\r\n                ul.append(li);\r\n            }\r\n        }\r\n\r\n        taskList.append(ul);\r\n\r\n        const numOfTodos = document.querySelectorAll(\".task-list ul li\").length;\r\n        updateTaskCount(numOfTodos);\r\n    };\r\n\r\n    const displayTodosDueToday = () => {\r\n        const taskList = document.querySelector(\".task-list\");\r\n\r\n        const ul = document.createElement(\"ul\");\r\n        const li = createTodoElements(projectIndex, todoIndex);\r\n\r\n        ul.append(li);\r\n        taskList.append(ul);\r\n\r\n        const numOfTodos = document.querySelectorAll(\".task-list ul li\").length;\r\n        updateTaskCount(numOfTodos);\r\n    };\r\n\r\n    const displayTodosDueThisWeek = () => {\r\n        const taskList = document.querySelector(\".task-list\");\r\n\r\n        const ul = document.createElement(\"ul\");\r\n        const li = createTodoElements(projectIndex, todoIndex);\r\n\r\n        ul.append(li);\r\n        taskList.append(ul);\r\n\r\n        const numOfTodos = document.querySelectorAll(\".task-list ul li\").length;\r\n        updateTaskCount(numOfTodos);\r\n    };\r\n\r\n    const displayCompletedTodos = () => {\r\n        const taskList = document.querySelector(\".task-list\");\r\n\r\n        const ul = document.createElement(\"ul\");\r\n        const li = createTodoElements(projectIndex, todoIndex);\r\n\r\n        ul.append(li);\r\n        taskList.append(ul);\r\n\r\n        const numOfTodos = document.querySelectorAll(\".task-list ul li\").length;\r\n        updateTaskCount(numOfTodos);\r\n    };\r\n\r\n    if (display === \"singleProjectTodos\") {\r\n        displaySingleProjectTodos();\r\n        return;\r\n    }\r\n\r\n    if (display === \"allProjectsTodos\") {\r\n        displayAllProjectsTodos();\r\n        return;\r\n    }\r\n\r\n    if (display === \"todosDueToday\") {\r\n        displayTodosDueToday();\r\n        return;\r\n    }\r\n\r\n    if (display === \"todosDueThisWeek\") {\r\n        displayTodosDueThisWeek();\r\n        return;\r\n    }\r\n\r\n    if (display === \"todosCompleted\") {\r\n        displayCompletedTodos();\r\n    }\r\n};\r\n\r\nexport {\r\n    toggleHideOrShowInputForProjectName,\r\n    appendProjectNameToDOM,\r\n    toggleHideOrShowInputForToDoInfo,\r\n    toggleHideOrShowInputToEditToDoInfo,\r\n    displayTodos,\r\n    toggleAddTaskButton,\r\n    preventAddOrChangeProject,\r\n};\r\n","\"use strict\";\n\nimport { projects as projectsAndTodosManager } from \"./project-manager\";\n\n// This function populates the local storage whenever there is a change in the projects and todos array\nexport const populateStorage = (projectsAndTodosArray) => {\n    localStorage.setItem(\"projectsAndTodos\", JSON.stringify(projectsAndTodosArray));\n};\n\n// This function retrieves the projects and todos from local storage\nconst getProjectsAndTodosFromStorage = () => {\n    let projectsAndTodos = null;\n\n    try {\n        projectsAndTodos = JSON.parse(localStorage.getItem(\"projectsAndTodos\"));\n    } catch (error) {\n        console.error(\"Error parsing projects and todos from local storage\", error);\n    }\n\n    return projectsAndTodos;\n};\n\n// This function renders the projects and todos from local storage\nconst renderProjectsAndTodosFromStorage = (projectsAndTodos) => {\n    // If there are no projects and todos in local storage, log a message and return\n    if (!projectsAndTodos) {\n        console.log(\"Nothing in storage yet!\");\n        return;\n    }\n\n    // For each project in the projects and todos array\n    projectsAndTodos.forEach((project) => {\n        // Add a new project in the page\n        projectsAndTodosManager.addNewProject(project.projectName);\n\n        // For each todo in the project\n        project.todos.forEach((todo) => {\n            // Add a new todo to the project in the page\n            projectsAndTodosManager.addNewTodoToAProject(todo, project.id);\n        });\n    });\n};\n\n// When the document content is loaded\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    // Retrieve the projects and todos from local storage\n    const projectsAndTodos = getProjectsAndTodosFromStorage();\n    // Render the retrieved projects and todos in the page\n    renderProjectsAndTodosFromStorage(projectsAndTodos);\n});\n","\"use strict\";\r\n\r\nimport { appendProjectNameToDOM, dataIndexOfLastProjectClicked, displayTodos } from \"./dom-manager\";\r\nimport { populateStorage } from \"./local-storage\";\r\n\r\n// This function manages an array of projects (an array of to-do items)\r\n// Each element in the array is an object with an id, projectName, and todos\r\nconst projectsAndToDosManager = () => {\r\n    const projects = [];\r\n\r\n    const getProjects = () => {\r\n        return projects;\r\n    };\r\n\r\n    const addNewProject = (projectName) => {\r\n        if (projectName === \"\") {\r\n            return;\r\n        }\r\n\r\n        let id = projects.length;\r\n        let todos = [];\r\n\r\n        projects.push({ id, projectName, todos });\r\n\r\n        appendProjectNameToDOM(projectName, id);\r\n        populateStorage(projects);\r\n    };\r\n\r\n    const removeProject = (index) => {\r\n        if (index > -1) {\r\n            projects.splice(index, 1);\r\n        }\r\n\r\n        // Updates the id of all remaining projects in the array to reflect\r\n        // their new position in the projectsManager.projects array\r\n        for (let i = 0; i < projects.length; i++) {\r\n            projects[i].id = i;\r\n        }\r\n\r\n        populateStorage(projects);\r\n    };\r\n\r\n    const addNewTodoToAProject = (toDoInfo, projectDataIndex) => {\r\n        if (projectDataIndex < 0 || projectDataIndex >= projects.length) {\r\n            alert(\"Invalid project index\");\r\n            return;\r\n        }\r\n\r\n        projects[projectDataIndex].todos.push(toDoInfo);\r\n\r\n        displayTodos(\"singleProjectTodos\", projectDataIndex);\r\n        populateStorage(projects);\r\n    };\r\n\r\n    const updateTodoInfo = (updatedTodoInfo, projectDataIndex, dataIndexOfTodoToUpdate) => {\r\n        if (\r\n            projectDataIndex < 0 ||\r\n            projectDataIndex >= projects.length ||\r\n            dataIndexOfTodoToUpdate < 0 ||\r\n            dataIndexOfTodoToUpdate > projects[projectDataIndex].todos.length\r\n        ) {\r\n            console.log(\"Invalid project index\");\r\n            return;\r\n        }\r\n\r\n        projects[projectDataIndex].todos.splice(dataIndexOfTodoToUpdate, 1, updatedTodoInfo);\r\n\r\n        // If in \"All Tasks\" tab, keeps user there... If inside a project, keeps user there\r\n        dataIndexOfLastProjectClicked === null\r\n            ? displayTodos(\"allProjectsTodos\")\r\n            : displayTodos(\"singleProjectTodos\", projectDataIndex);\r\n\r\n        populateStorage(projects);\r\n    };\r\n\r\n    const deleteTodo = (projectDataIndex, todoDataIndex) => {\r\n        if (projectDataIndex > -1 || todoDataIndex > -1) {\r\n            projects[projectDataIndex].todos.splice(todoDataIndex, 1);\r\n        }\r\n\r\n        // If in \"All Tasks\" tab, keeps user there... If inside a project, keeps user there\r\n        dataIndexOfLastProjectClicked === null\r\n            ? displayTodos(\"allProjectsTodos\")\r\n            : displayTodos(\"singleProjectTodos\", projectDataIndex);\r\n\r\n        populateStorage(projects);\r\n    };\r\n\r\n    const toggleTodoCompletion = (projectIndex, todoIndex, todoIsCompleted) => {\r\n        projects[projectIndex].todos[todoIndex].isCompleted = todoIsCompleted;\r\n        populateStorage(projects);\r\n    };\r\n\r\n    return {\r\n        addNewProject,\r\n        removeProject,\r\n        getProjects,\r\n        addNewTodoToAProject,\r\n        updateTodoInfo,\r\n        deleteTodo,\r\n        toggleTodoCompletion,\r\n    };\r\n};\r\n\r\nexport const projects = projectsAndToDosManager();\r\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isWithinInterval\n * @category Interval Helpers\n * @summary Is the given date within the interval?\n *\n * @description\n * Is the given date within the interval? (Including start and end.)\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n * @param interval - The interval to check\n *\n * @returns The date is within the interval\n *\n * @example\n * // For the date within the interval:\n * isWithinInterval(new Date(2014, 0, 3), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> true\n *\n * @example\n * // For the date outside of the interval:\n * isWithinInterval(new Date(2014, 0, 10), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> false\n *\n * @example\n * // For date equal to interval start:\n * isWithinInterval(date, { start, end: date })\n * // => true\n *\n * @example\n * // For date equal to interval end:\n * isWithinInterval(date, { start: date, end })\n * // => true\n */\nexport function isWithinInterval(date, interval) {\n  const time = +toDate(date);\n  const [startTime, endTime] = [\n    +toDate(interval.start),\n    +toDate(interval.end),\n  ].sort((a, b) => a - b);\n\n  return time >= startTime && time <= endTime;\n}\n\n// Fallback for modularized imports:\nexport default isWithinInterval;\n","import { dataIndexOfLastProjectClicked, toggleAddTaskButton, displayTodos } from \"./dom-manager\";\nimport { projects as projectsAndTodosManager } from \"./project-manager\";\nimport { isEqual, startOfWeek, endOfWeek, isWithinInterval, toDate, format } from \"date-fns\";\n\nconst allTasks = () => {\n    // For validation in updateTodoInfo and deleteTodo functions in the project-manager module\n    // If the last click was in \"All Tasks\", deleting or updating todo info will keep user on All Tasks page\n    dataIndexOfLastProjectClicked = null;\n\n    displayTodos(\"allProjectsTodos\");\n};\n\nconst today = () => {\n    const projects = projectsAndTodosManager.getProjects();\n\n    const taskList = document.querySelector(\".task-list\");\n    taskList.textContent = \"\";\n\n    let today = new Date();\n\n    // padStart ensure that days and months always have two digits\n    let dd = String(today.getDate()).padStart(2, \"0\");\n    let mm = String(today.getMonth() + 1).padStart(2, \"0\"); // January is 0!\n    let yyyy = today.getFullYear();\n\n    today = `${yyyy}-${mm}-${dd}`;\n\n    // For each todo inside a project, if this todo due date is equal to today's date, displays it on page\n    projects.forEach((project) => {\n        project.todos.forEach((todo) => {\n            const dueDateIsEqualToTodayDate = isEqual(todo.dueDate, today);\n\n            if (dueDateIsEqualToTodayDate) {\n                let projectId = project.id;\n                let todoIndex = projects[projectId].todos.indexOf(todo);\n\n                displayTodos(\"todosDueToday\", projectId, todoIndex);\n            }\n        });\n    });\n};\n\nconst thisWeek = () => {\n    const projects = projectsAndTodosManager.getProjects();\n\n    const taskList = document.querySelector(\".task-list\");\n    taskList.textContent = \"\";\n\n    let today = new Date();\n\n    // Get the start and end of week based on today's date\n    const weekStart = startOfWeek(today, { weekStartsOn: 1 });\n    const weekEnd = endOfWeek(today, { weekStartsOn: 1 });\n\n    // Format start and end of week dates to correspond todo dueDate\n    const formattedWeekStart = format(weekStart, \"yyyy-MM-dd\");\n    const formattedWeekEnd = format(weekEnd, \"yyyy-MM-dd\");\n\n    projects.forEach((project) => {\n        project.todos.forEach((todo) => {\n            const isTodoDueThisWeek = isWithinInterval(todo.dueDate, {\n                start: formattedWeekStart,\n                end: formattedWeekEnd,\n            });\n\n            if (isTodoDueThisWeek) {\n                let projectId = project.id;\n                let todoIndex = projects[projectId].todos.indexOf(todo);\n                displayTodos(\"todosDueThisWeek\", projectId, todoIndex);\n            }\n        });\n    });\n};\n\nconst important = () => {\n    console.log(\"Important\");\n};\n\nconst completed = () => {\n    const projects = projectsAndTodosManager.getProjects();\n\n    const taskList = document.querySelector(\".task-list\");\n    taskList.textContent = \"\";\n\n    projects.forEach((project) => {\n        project.todos.forEach((todo) => {\n            console.log(todo);\n            if (todo.isCompleted) {\n                let projectId = project.id;\n                let todoIndex = projects[projectId].todos.indexOf(todo);\n\n                displayTodos(\"todosCompleted\", projectId, todoIndex);\n            }\n        });\n    });\n};\n\nconst handleMenuButtonsClick = (e) => {\n    // Hide add task button when clicking on menu buttons\n    toggleAddTaskButton(false);\n\n    const tasksHeader = document.querySelector(\".tasks-container .tasks-header\");\n\n    let buttonId = e.target.id;\n\n    switch (buttonId) {\n        case \"all-tasks\":\n            tasksHeader.textContent = \"All Tasks\";\n            allTasks();\n            break;\n        case \"today\":\n            tasksHeader.textContent = \"Due Today\";\n            today();\n            break;\n        case \"this-week\":\n            tasksHeader.textContent = \"This Week\";\n            thisWeek();\n            break;\n        case \"important\":\n            important();\n            break;\n        case \"completed\":\n            tasksHeader.textContent = \"Completed Todos\";\n            completed();\n            break;\n        default:\n            console.log(\"Invalid button ID\");\n    }\n};\n\nexport { handleMenuButtonsClick };\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isEqual\n * @category Common Helpers\n * @summary Are the given dates equal?\n *\n * @description\n * Are the given dates equal?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to compare\n * @param dateRight - The second date to compare\n *\n * @returns The dates are equal\n *\n * @example\n * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\n * const result = isEqual(\n *   new Date(2014, 6, 2, 6, 30, 45, 0),\n *   new Date(2014, 6, 2, 6, 30, 45, 500)\n * )\n * //=> false\n */\nexport function isEqual(leftDate, rightDate) {\n  const _dateLeft = toDate(leftDate);\n  const _dateRight = toDate(rightDate);\n  return +_dateLeft === +_dateRight;\n}\n\n// Fallback for modularized imports:\nexport default isEqual;\n","import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link endOfWeek} function options.\n */\n\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a week\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport function endOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n\n  _date.setDate(_date.getDate() + diff);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfWeek;\n","\"use strict\";\r\n\r\nimport { projects as projectsAndToDosManager } from \"./modules/project-manager.js\";\r\nimport {\r\n    dataIndexOfLastProjectClicked,\r\n    toggleHideOrShowInputForProjectName,\r\n    toggleHideOrShowInputForToDoInfo,\r\n    toggleHideOrShowInputToEditToDoInfo,\r\n    toggleAddTaskButton,\r\n    preventAddOrChangeProject,\r\n    displayTodos,\r\n} from \"./modules/dom-manager.js\";\r\nimport { handleMenuButtonsClick } from \"./modules/home-menu-handlers.js\";\r\n\r\nconst homeMenuButtons = document.querySelectorAll(\"ul.home-menu > li\");\r\nlet todoDataIndex;\r\nlet projectDataIndex;\r\n\r\n// Handle click on the \"Add Project\" button in the Projects Menu\r\nconst handleClickOnAddProjectNameBtn = (e) => {\r\n    e.preventDefault();\r\n\r\n    const projectNameInput = document.getElementById(\"project-name-input\");\r\n\r\n    projectsAndToDosManager.addNewProject(projectNameInput.value);\r\n\r\n    projectNameInput.value = \"\";\r\n};\r\n\r\n// Get new todo info or updated todo info from forms\r\nconst getToDoInfoFromForm = (e, formID) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData(document.getElementById(formID));\r\n    let title, description, dueDate, isCompleted;\r\n\r\n    switch (formID) {\r\n        case \"todo-input-form\":\r\n            title = formData.get(\"title\");\r\n            description = formData.get(\"description\");\r\n            dueDate = document.getElementById(\"due-date\").value;\r\n            isCompleted = false;\r\n            break;\r\n        case \"edit-todo-form\":\r\n            const projects = projectsAndToDosManager.getProjects();\r\n\r\n            title = formData.get(\"edit-title\");\r\n            description = formData.get(\"edit-description\");\r\n            dueDate = document.getElementById(\"edit-due-date\").value;\r\n\r\n            // isCompleted here will get the todo status of checked (or not) and keep it when submitting the updated todo info\r\n            isCompleted = projects[projectDataIndex].todos[todoDataIndex].isCompleted;\r\n\r\n            break;\r\n        default:\r\n            alert(\"Error getting info from form!\");\r\n    }\r\n\r\n    return { title, description, dueDate, isCompleted };\r\n};\r\n\r\nconst clearToDoInfoInputs = () => {\r\n    // Clear all to do info inputs after adding or canceling a to do\r\n    const inputs = document.querySelectorAll(\"#title, #description, #due-date\");\r\n    inputs.forEach((input) => {\r\n        input.value = \"\";\r\n    });\r\n};\r\n\r\nfunction fillFormFieldsWithTodoInfo(todo) {\r\n    document.getElementById(\"edit-title\").value = todo.title;\r\n    document.getElementById(\"edit-description\").value = todo.description;\r\n    document.getElementById(\"edit-due-date\").value = todo.dueDate;\r\n}\r\n\r\n// Handles a click on the edit todo button, allowing the\r\n// user to change the information of each individual todo\r\nconst handleEditTodoClick = (todoDataIndex, projectDataIndex) => {\r\n    toggleHideOrShowInputToEditToDoInfo();\r\n    toggleAddTaskButton(false);\r\n    preventAddOrChangeProject(true);\r\n\r\n    const projectsArray = projectsAndToDosManager.getProjects();\r\n\r\n    const infoOfTodoToEdit = projectsArray[projectDataIndex].todos[todoDataIndex];\r\n\r\n    fillFormFieldsWithTodoInfo(infoOfTodoToEdit);\r\n};\r\n\r\nconst handleDeleteTodoClick = (todoDataIndex, projectDataIndex) => {\r\n    projectsAndToDosManager.deleteTodo(projectDataIndex, todoDataIndex);\r\n};\r\n\r\n// Button to create a new project (\"Add Project\" button)\r\ndocument.getElementById(\"add-project-button\").addEventListener(\"click\", toggleHideOrShowInputForProjectName);\r\n\r\n// Form to type project name... it opens when the user clicks on the \"Add Project\" button\r\ndocument.getElementById(\"project-name-input-form\").addEventListener(\"submit\", handleClickOnAddProjectNameBtn);\r\n\r\n// Handle click on cancel project name button\r\ndocument.querySelector(\"#btn-cancel-project\").addEventListener(\"click\", (e) => {\r\n    e.preventDefault();\r\n    toggleHideOrShowInputForProjectName();\r\n});\r\n\r\n// If user clicks on \"Add Task\" button, it will open a form to insert todo info\r\ndocument.querySelector(\".tasks-container .add-task-button\").addEventListener(\"click\", toggleHideOrShowInputForToDoInfo);\r\n\r\ndocument.querySelector(\"#todo-input-form\").addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n\r\n    const formID = \"todo-input-form\";\r\n    const todoInfo = getToDoInfoFromForm(e, formID);\r\n    // Add new to do to the last project clicked (dataIndexOfLastProjectClicked)\r\n    projectsAndToDosManager.addNewTodoToAProject(todoInfo, dataIndexOfLastProjectClicked);\r\n\r\n    toggleHideOrShowInputForToDoInfo();\r\n    clearToDoInfoInputs();\r\n});\r\n\r\n// If user clicks on \"Edit\" button, it will open a form to update todo info\r\ndocument.querySelector(\"#edit-todo-form\").addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n\r\n    const formID = \"edit-todo-form\";\r\n    const updatedTodoInfo = getToDoInfoFromForm(e, formID);\r\n\r\n    projectsAndToDosManager.updateTodoInfo(updatedTodoInfo, projectDataIndex, todoDataIndex);\r\n\r\n    toggleHideOrShowInputToEditToDoInfo();\r\n    toggleAddTaskButton(true);\r\n    preventAddOrChangeProject(false);\r\n    clearToDoInfoInputs();\r\n});\r\n\r\ndocument.querySelector(\"body\").addEventListener(\"click\", (e) => {\r\n    if (e.target.className === \"edit-to-do\") {\r\n        // Get targeted html todo data-index and project data-index\r\n        todoDataIndex = e.target.closest(\".todo\").dataset.todoIndex;\r\n        projectDataIndex = e.target.closest(\".todo\").dataset.projectIndex;\r\n        handleEditTodoClick(todoDataIndex, projectDataIndex);\r\n\r\n        return;\r\n    }\r\n\r\n    if (e.target.className === \"delete-to-do\") {\r\n        // Get targeted html todo data-index and project data-index\r\n        todoDataIndex = e.target.closest(\".todo\").dataset.todoIndex;\r\n        projectDataIndex = e.target.closest(\".todo\").dataset.projectIndex;\r\n        handleDeleteTodoClick(todoDataIndex, projectDataIndex);\r\n    }\r\n});\r\n\r\ndocument.querySelector(\"#btn-cancel-todo\").addEventListener(\"click\", (e) => {\r\n    e.preventDefault();\r\n    toggleHideOrShowInputForToDoInfo();\r\n    clearToDoInfoInputs();\r\n});\r\n\r\ndocument.querySelector(\"#btn-cancel-todo-update\").addEventListener(\"click\", (e) => {\r\n    e.preventDefault();\r\n    toggleHideOrShowInputToEditToDoInfo();\r\n    toggleAddTaskButton(true);\r\n    preventAddOrChangeProject(false);\r\n});\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    // Display \"Add Project\" button and hide input form in the initial page load\r\n    document.getElementById(\"add-project-button\").style.display = \"flex\";\r\n    document.getElementById(\"project-name-input-form\").style.display = \"none\";\r\n\r\n    // Initial page load - Display all projects todos\r\n    displayTodos(\"allProjectsTodos\");\r\n});\r\n\r\n// Menu buttons\r\nhomeMenuButtons.forEach((button) => {\r\n    button.addEventListener(\"click\", handleMenuButtonsClick);\r\n});\r\n"],"names":["toDate","argument","argStr","Object","prototype","toString","call","Date","constructor","NaN","isValid","date","value","_date","isNaN","Number","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","options","width","String","defaultWidth","formats","formatLong","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","valuesArray","context","formattingValues","defaultFormattingWidth","values","argumentCallback","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","key","Array","isArray","array","predicate","length","test","findIndex","object","hasOwnProperty","findKey","valueCallback","rest","slice","enUS","code","formatDistance","token","count","result","tokenValue","replace","addSuffix","comparison","formatRelative","_baseDate","_options","localize","ordinalNumber","dirtyNumber","number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseInt","parseResult","any","index","weekStartsOn","firstWeekContainsDate","defaultOptions","getDefaultOptions","Math","pow","millisecondsInWeek","millisecondsInDay","startOfDay","setHours","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","getTime","constructFrom","getDayOfYear","dateLeft","dateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","round","differenceInCalendarDays","cleanDate","setFullYear","startOfYear","startOfWeek","locale","getDay","diff","setDate","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getISOWeek","fourthOfJanuary","startOfISOWeekYear","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","getWeek","firstWeek","startOfWeekYear","addLeadingZeros","targetLength","abs","padStart","lightFormatters","y","signedYear","M","d","a","dayPeriodEnumValue","toUpperCase","h","H","m","s","S","numberOfDigits","milliseconds","floor","formatters","G","unit","Y","signedWeekYear","weekYear","R","u","Q","ceil","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","e","localDayOfWeek","c","i","isoDayOfWeek","toLowerCase","b","hours","B","K","k","X","_localize","timezoneOffset","_originalDate","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","originalDate","T","offset","delimiter","sign","absOffset","minutes","dateLongFormatter","pattern","timeLongFormatter","longFormatters","p","P","datePattern","timePattern","dateTimeFormat","protectedDayOfYearTokens","protectedWeekYearTokens","throwProtectedError","format","input","RangeError","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","formatStr","formatterOptions","map","substring","firstCharacter","longFormatter","join","matched","cleanEscapedString","formatter","useAdditionalWeekYearTokens","indexOf","useAdditionalDayOfYearTokens","isProtectedDayOfYearToken","dataIndexOfLastProjectClicked","toggleHideOrShowInputForProjectName","addProjectButton","document","getElementById","inputFormForProjectName","style","display","toggleHideOrShowInputForToDoInfo","toDoInformationForm","querySelector","toggleHideOrShowInputToEditToDoInfo","toggleAddTaskButton","show","preventAddOrChangeProject","status","projects","querySelectorAll","addProjectBtn","forEach","project","classList","add","remove","appendProjectNameToDOM","projectName","ul","li","createElement","textContent","setAttribute","createListItemWithProjectName","addEventListener","target","className","dataset","projectsArray","getProjects","updateProjectsHeaderOnPage","displayTodos","parentElement","allProjects","removeProjectFromDOM","removeProject","updateTaskCount","clearTaskList","handleClickOnDeleteProjectButton","addEventListenerToProjectNameListItem","deleteBtn","createDeleteProjectButton","appendChild","append","numOfTodos","onTodoCheckboxChange","isCompleted","checked","projectIndex","closest","todoIndex","toggleTodoCompletion","taskList","createTodoElements","todoLeftSide","projectsAndTodosArray","checkboxDiv","checkbox","todos","todoTitleAndDescriptionDiv","todoTitleLabel","title","todoDescriptionPara","description","createTodoLeftSide","todoRightSide","dateString","dueDate","editTodoBtn","deleteTodoBtn","createTodoRightSide","displayCompletedTodos","displayTodosDueThisWeek","displayTodosDueToday","j","displayAllProjectsTodos","displaySingleProjectTodos","populateStorage","localStorage","setItem","JSON","stringify","projectsAndTodos","parse","getItem","error","console","getProjectsAndTodosFromStorage","addNewProject","todo","addNewTodoToAProject","id","log","push","splice","toDoInfo","projectDataIndex","alert","updateTodoInfo","updatedTodoInfo","dataIndexOfTodoToUpdate","deleteTodo","todoDataIndex","todoIsCompleted","projectsAndToDosManager","handleMenuButtonsClick","tasksHeader","dd","mm","yyyy","leftDate","rightDate","projectId","weekStart","weekEnd","endOfWeek","formattedWeekStart","formattedWeekEnd","interval","startTime","endTime","start","end","sort","isWithinInterval","thisWeek","completed","homeMenuButtons","getToDoInfoFromForm","formID","preventDefault","formData","FormData","get","clearToDoInfoInputs","projectNameInput","todoInfo","handleEditTodoClick","handleDeleteTodoClick","button"],"sourceRoot":""}