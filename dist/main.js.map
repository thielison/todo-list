{"version":3,"file":"main.js","mappings":"mBAEA,MAAMA,EAAmBC,SAASC,eAAe,sBAC3CC,EAA0BF,SAASC,eAAe,2BAoClDE,EAAyB,CAACC,EAAaC,KAEzC,MAAMC,EAAKN,SAASO,cAAc,aAG5BC,EApC4B,EAACJ,EAAaC,KAChD,IAAIG,EAAKR,SAASS,cAAc,MAKhC,OAJAD,EAAGE,YAAcN,EACjBI,EAAGG,aAAa,aAAcN,GAC9BG,EAAGI,UAAUC,IAAI,WAEVL,CAAE,EA8BEM,CAA8BV,EAAaC,GA1BvB,CAACG,IAChCA,EAAGO,iBAAiB,SAAUC,IAE1B,GAA2B,eAAvBA,EAAEC,OAAOC,UAKT,OAHAC,EAAqBH,EAAEC,aAEvBG,EAASC,cAAcL,EAAEC,OAAOK,cAAcC,QAAQlB,MAE1D,GACF,EAmBFmB,CAA2BhB,GAG3B,MAAMiB,EAlBwB,MAC9B,MAAMA,EAAYzB,SAASS,cAAc,QAEzC,OADAgB,EAAUP,UAAY,aACfO,CAAS,EAeEC,GAElBlB,EAAGmB,YAAYF,GACfnB,EAAGsB,OAAOpB,GAGVqB,GAAqC,EAGnCV,EAAwBW,IAE1BA,EAAQR,cAAcS,SAItB,IAAIC,EAAchC,SAASiC,iBAAiB,YAC5C,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAYG,OAAQD,IACpCF,EAAYE,GAAGvB,aAAa,aAAcuB,EAC9C,EAGEL,EAAsC,KACxC,GAA8C,SAA1C3B,EAAwBkC,MAAMC,SAAyD,SAAnCtC,EAAiBqC,MAAMC,QAG3E,OAFAnC,EAAwBkC,MAAMC,QAAU,YACxCtC,EAAiBqC,MAAMC,QAAU,QAIrCnC,EAAwBkC,MAAMC,QAAU,OACxCtC,EAAiBqC,MAAMC,QAAU,MAAM,EC1C9BjB,EAjCW,MACpB,MAAMA,EAAW,GA6BjB,MAAO,CAAEkB,cA3Ba,KAClB,MAAMC,EAAmBvC,SAASC,eAAe,sBAEjD,IAAIuC,EAAKpB,EAASe,OAEd/B,EAAcmC,EAAiBE,MAEf,KAAhBrC,IAIJgB,EAASsB,KAAK,CAAEF,KAAIpC,cAAauC,MAPrB,KAQZxC,EAAuBC,EAAaoC,GAEpCD,EAAiBE,MAAQ,GAEzBG,QAAQC,IAAIzB,GAAS,EAWDC,cARDhB,IACfA,GAAS,GACTe,EAAS0B,OAAOzC,EAAO,GAG3BuC,QAAQC,IAAIzB,EAAS,EAGc,EAGnB2B,GCtBxB/C,SAASC,eAAe,sBAAsBc,iBAAiB,SAAS,IAAMc,MAG9E7B,SAASC,eAAe,2BAA2Bc,iBAAiB,SAdlBiC,IAC9CA,EAAUC,iBAE2B,QAAjCD,EAAU/B,OAAOP,YACjBU,EAASkB,gBAC+B,WAAjCU,EAAU/B,OAAOP,aACxBmB,GACJ,G","sources":["webpack://todo-list/./src/modules/dom-manager.js","webpack://todo-list/./src/modules/project-manager.js","webpack://todo-list/./src/index.js"],"sourcesContent":["import { projects } from \"./project-manager.js\";\r\n\r\nconst addProjectButton = document.getElementById(\"add-project-button\");\r\nconst inputFormForProjectName = document.getElementById(\"project-name-input-form\");\r\n\r\n// Create a new list item that hold the name of the project\r\n// The data-index attribute set here on each project in the DOM\r\n// corresponds exactly to the index of the array that holds the Projects\r\nconst createListItemWithProjectName = (projectName, index) => {\r\n    let li = document.createElement(\"li\");\r\n    li.textContent = projectName;\r\n    li.setAttribute(\"data-index\", index);\r\n    li.classList.add(\"project\");\r\n\r\n    return li;\r\n};\r\n\r\n// Function do add an event listener to each project name (list item)\r\nconst addEventListenerToListItem = (li) => {\r\n    li.addEventListener(\"click\", (e) => {\r\n        // Check if the clicked element is the delete button\r\n        if (e.target.className === \"delete-btn\") {\r\n            // If it is, remove the project from the DOM\r\n            removeProjectFromDOM(e.target);\r\n            // And remove the project from the projects array\r\n            projects.removeProject(e.target.parentElement.dataset.index);\r\n            return;\r\n        }\r\n    });\r\n};\r\n\r\n// Delete project on each project name on the DOM\r\nconst createDeleteProjectButton = () => {\r\n    const deleteBtn = document.createElement(\"span\");\r\n    deleteBtn.className = \"delete-btn\";\r\n    return deleteBtn;\r\n};\r\n\r\n// Function to append a new project name to the DOM\r\nconst appendProjectNameToDOM = (projectName, index) => {\r\n    // Select the projects unordered list from the DOM\r\n    const ul = document.querySelector(\".projects\");\r\n\r\n    // Create a new list item with project name and data-index\r\n    const li = createListItemWithProjectName(projectName, index);\r\n\r\n    // Add an event listener to the list item\r\n    addEventListenerToListItem(li);\r\n\r\n    // Create a delete button for the project\r\n    const deleteBtn = createDeleteProjectButton();\r\n\r\n    li.appendChild(deleteBtn);\r\n    ul.append(li);\r\n\r\n    // Toggle the visibility of the input for the project name\r\n    toggleHideOrShowInputForProjectName();\r\n};\r\n\r\nconst removeProjectFromDOM = (project) => {\r\n    // Removes a project from the DOM\r\n    project.parentElement.remove();\r\n\r\n    // Updates the data-index attribute of all remaining book cards\r\n    // to reflect their new position in the projectsManager.projects array\r\n    let allProjects = document.querySelectorAll(\".project\");\r\n    for (let i = 0; i < allProjects.length; i++) {\r\n        allProjects[i].setAttribute(\"data-index\", i);\r\n    }\r\n};\r\n\r\nconst toggleHideOrShowInputForProjectName = () => {\r\n    if (inputFormForProjectName.style.display === \"flex\" && addProjectButton.style.display === \"none\") {\r\n        inputFormForProjectName.style.display = \"none\";\r\n        addProjectButton.style.display = \"flex\";\r\n        return;\r\n    }\r\n\r\n    inputFormForProjectName.style.display = \"flex\";\r\n    addProjectButton.style.display = \"none\";\r\n};\r\n\r\nexport { toggleHideOrShowInputForProjectName, appendProjectNameToDOM, removeProjectFromDOM };\r\n","import { appendProjectNameToDOM } from \"./dom-manager\";\r\n\r\n// This function manages an array of projects (an array of to-do items)\r\n// Each element in the array is an object with an id, projectName, and todos\r\nconst projectsManager = () => {\r\n    const projects = [];\r\n\r\n    const addNewProject = () => {\r\n        const projectNameInput = document.getElementById(\"project-name-input\");\r\n\r\n        let id = projects.length;\r\n        let todos = [];\r\n        let projectName = projectNameInput.value;\r\n\r\n        if (projectName === \"\") {\r\n            return;\r\n        }\r\n\r\n        projects.push({ id, projectName, todos });\r\n        appendProjectNameToDOM(projectName, id);\r\n\r\n        projectNameInput.value = \"\";\r\n\r\n        console.log(projects);\r\n    };\r\n\r\n    const removeProject = (index) => {\r\n        if (index > -1) {\r\n            projects.splice(index, 1);\r\n        }\r\n\r\n        console.log(projects);\r\n    };\r\n\r\n    return { addNewProject, removeProject };\r\n};\r\n\r\nexport const projects = projectsManager();\r\n","import { projects } from \"./modules/project-manager.js\";\r\nimport { toggleHideOrShowInputForProjectName } from \"./modules/dom-manager.js\";\r\n\r\n// Handle click on the \"Add Project Button\" in the Projects Menu\r\nconst handleClickOnAddAndCancelProjectNameBtns = (submitBtn) => {\r\n    submitBtn.preventDefault();\r\n\r\n    if (submitBtn.target.textContent === \"Add\") {\r\n        projects.addNewProject();\r\n    } else if (submitBtn.target.textContent === \"Cancel\") {\r\n        toggleHideOrShowInputForProjectName();\r\n    }\r\n};\r\n\r\n// Button to create a new project (\"Add Project\" button)\r\ndocument.getElementById(\"add-project-button\").addEventListener(\"click\", () => toggleHideOrShowInputForProjectName());\r\n\r\n// Form to type project name... it opens when the user clicks on the \"Add Project\" button\r\ndocument.getElementById(\"project-name-input-form\").addEventListener(\"click\", handleClickOnAddAndCancelProjectNameBtns);\r\n"],"names":["addProjectButton","document","getElementById","inputFormForProjectName","appendProjectNameToDOM","projectName","index","ul","querySelector","li","createElement","textContent","setAttribute","classList","add","createListItemWithProjectName","addEventListener","e","target","className","removeProjectFromDOM","projects","removeProject","parentElement","dataset","addEventListenerToListItem","deleteBtn","createDeleteProjectButton","appendChild","append","toggleHideOrShowInputForProjectName","project","remove","allProjects","querySelectorAll","i","length","style","display","addNewProject","projectNameInput","id","value","push","todos","console","log","splice","projectsManager","submitBtn","preventDefault"],"sourceRoot":""}