{"version":3,"file":"main.js","mappings":"mBAAA,MAAMA,EAAmBC,SAASC,eAAe,sBAC3CC,EAA0BF,SAASC,eAAe,2BA4ClDE,EAAsC,KACxC,GAA8C,SAA1CD,EAAwBE,MAAMC,SAAyD,SAAnCN,EAAiBK,MAAMC,QAG3E,OAFAH,EAAwBE,MAAMC,QAAU,YACxCN,EAAiBK,MAAMC,QAAU,QAIrCH,EAAwBE,MAAMC,QAAU,OACxCN,EAAiBK,MAAMC,QAAU,MAAM,EChC9BC,EAnBW,MACpB,MAAMA,EAAW,GAejB,MAAO,CAAEC,cAba,KAClB,MAAMC,EAAmBR,SAASC,eAAe,sBAEjD,IAAIQ,EAAKH,EAASI,OAAS,EAEvBC,EAAcH,EAAiBI,MAEnCN,EAASO,KAAK,CAAEJ,KAAIE,cAAaG,MAHrB,KDkBW,EAACH,EAAaI,KAKzC,MAAMC,EAAKhB,SAASiB,cAAc,aAE5BC,EAxBa,CAACC,IACpB,MAAMD,EAAKlB,SAASoB,cAAc,MASlC,OARAF,EAAGG,YAAcF,EAEjBD,EAAGI,iBAAiB,SAAUC,IACC,eAAvBA,EAAEC,OAAOC,WACYF,EAAEC,OAQvBE,cAAcC,QAPlB,IAGGT,CAAE,EAcEU,CAAejB,GAC1BO,EAAGW,aAAa,aAAcd,GAE9B,MAAMe,EAjCwB,MAC9B,MAAMA,EAAY9B,SAASoB,cAAc,QAEzC,OADAU,EAAUL,UAAY,aACfK,CAAS,EA8BEC,GAElBb,EAAGc,YAAYF,GACfd,EAAGiB,OAAOf,GAEVf,GAAqC,EC7BjC+B,CAAuBvB,EAAaF,GAEpCD,EAAiBI,MAAQ,EAAE,EAGP,EAGJuB,GCNxBnC,SAASC,eAAe,sBAAsBqB,iBAAiB,SAAS,IAAMnB,MAG9EH,SAASC,eAAe,2BAA2BqB,iBAAiB,SAdlBc,IAC9CA,EAAUC,iBAE2B,QAAjCD,EAAUZ,OAAOH,YACjBf,EAASC,gBAC+B,WAAjC6B,EAAUZ,OAAOH,aACxBlB,GACJ,G","sources":["webpack://todo-list/./src/modules/dom-manager.js","webpack://todo-list/./src/modules/project-manager.js","webpack://todo-list/./src/index.js"],"sourcesContent":["const addProjectButton = document.getElementById(\"add-project-button\");\r\nconst inputFormForProjectName = document.getElementById(\"project-name-input-form\");\r\n\r\n// DOM related functions to create or delete projects\r\nconst createDeleteProjectButton = () => {\r\n    const deleteBtn = document.createElement(\"span\");\r\n    deleteBtn.className = \"delete-btn\";\r\n    return deleteBtn;\r\n};\r\n\r\nconst createListItem = (text) => {\r\n    const li = document.createElement(\"li\");\r\n    li.textContent = text;\r\n\r\n    li.addEventListener(\"click\", (e) => {\r\n        if (e.target.className === \"delete-btn\") {\r\n            deleteProjectFromDOM(e.target);\r\n        }\r\n    });\r\n\r\n    return li;\r\n};\r\n\r\nconst deleteProjectFromDOM = (project) => {\r\n    project.parentElement.remove();\r\n};\r\n\r\nconst appendProjectNameToDOM = (projectName, index) => {\r\n    // if (projectName === \"\") {\r\n    //     return;\r\n    // }\r\n\r\n    const ul = document.querySelector(\".projects\");\r\n\r\n    const li = createListItem(projectName);\r\n    li.setAttribute(\"data-index\", index);\r\n\r\n    const deleteBtn = createDeleteProjectButton();\r\n\r\n    li.appendChild(deleteBtn);\r\n    ul.append(li);\r\n\r\n    toggleHideOrShowInputForProjectName();\r\n};\r\n\r\nconst toggleHideOrShowInputForProjectName = () => {\r\n    if (inputFormForProjectName.style.display === \"flex\" && addProjectButton.style.display === \"none\") {\r\n        inputFormForProjectName.style.display = \"none\";\r\n        addProjectButton.style.display = \"flex\";\r\n        return;\r\n    }\r\n\r\n    inputFormForProjectName.style.display = \"flex\";\r\n    addProjectButton.style.display = \"none\";\r\n};\r\n\r\nexport { toggleHideOrShowInputForProjectName, appendProjectNameToDOM };\r\n","import { appendProjectNameToDOM } from \"./dom-manager\";\r\n\r\nconst projectsManager = () => {\r\n    const projects = [];\r\n\r\n    const addNewProject = () => {\r\n        const projectNameInput = document.getElementById(\"project-name-input\");\r\n\r\n        let id = projects.length + 1;\r\n        let todos = [];\r\n        let projectName = projectNameInput.value;\r\n\r\n        projects.push({ id, projectName, todos });\r\n        appendProjectNameToDOM(projectName, id);\r\n\r\n        projectNameInput.value = \"\";\r\n    };\r\n\r\n    return { addNewProject };\r\n};\r\n\r\nexport const projects = projectsManager();\r\n","import { projects } from \"./modules/project-manager.js\";\r\nimport { toggleHideOrShowInputForProjectName } from \"./modules/dom-manager.js\";\r\n\r\n// Handle click on the \"Add Project Button\" in the Projects Menu\r\nconst handleClickOnAddAndCancelProjectNameBtns = (submitBtn) => {\r\n    submitBtn.preventDefault();\r\n\r\n    if (submitBtn.target.textContent === \"Add\") {\r\n        projects.addNewProject();\r\n    } else if (submitBtn.target.textContent === \"Cancel\") {\r\n        toggleHideOrShowInputForProjectName();\r\n    }\r\n};\r\n\r\n// Button to create a new project (\"Add Project\" button)\r\ndocument.getElementById(\"add-project-button\").addEventListener(\"click\", () => toggleHideOrShowInputForProjectName());\r\n\r\n// Form to type project name... it opens when the user clicks on the \"Add Project\" button\r\ndocument.getElementById(\"project-name-input-form\").addEventListener(\"click\", handleClickOnAddAndCancelProjectNameBtns);\r\n"],"names":["addProjectButton","document","getElementById","inputFormForProjectName","toggleHideOrShowInputForProjectName","style","display","projects","addNewProject","projectNameInput","id","length","projectName","value","push","todos","index","ul","querySelector","li","text","createElement","textContent","addEventListener","e","target","className","parentElement","remove","createListItem","setAttribute","deleteBtn","createDeleteProjectButton","appendChild","append","appendProjectNameToDOM","projectsManager","submitBtn","preventDefault"],"sourceRoot":""}